kmom01
-------------------
1.
Jag har i tidigare kursen oopython arbetat med objektorienterad programmering.

 I början var det lite svårt att förstå hur man skulle tänka kring objekt och klasser hur det fungerade och arbetade men efter att ha jobbat med det i oopython kursen så skulle jag säga att jag har

  ganska bra koll på objektorienterad programmering och vad det innebär och skiljer sig från "vanlig" programmering.

  Trots att jag har tidigare erfarenhet så är jag säker på att jag inte har fått se och ta del av objektorienteringens fulla potential ännu, men det tar vi längs vägen.

***

2.
För att komma igång och skapa sina egna klasser måste man förstå skillnaden på ett objekt och en klass. En klass kan man säga är en mall för hur ett objekt ser ut, men ett objekt behöver inte komma från en "klass mall". Objekt skapas från en klass där alla objekt har samma variabler.

  Om man inte vill utgå från en särskild klass så kan man skapa ett tomt standardobjekt med hjälp av stdClass. Då har objektet inga variabler eller metoder kopplat till det ännu.

  Variabler eller metoder i en klass kan vara privata eller publika. Privat innebär att det inte kan ändras/nås utanför klassen. Publik betyder att det kan ändras/nås utanför klassen.



***

3.
Jag uppfattar att kodbas och strukturen i me/report är lite krånglig att förstå ännu. Det är många olika mappar och filer så det blir lätt lite snurrigt att hålla koll på vad som är vad och vad filerna ligger.

Det är lite likt som det kändes i början av design kursen.

Men jag tycker det är trevligt att arbeta med twig och markdown då jag har arbetat med det i design kursen och har därför lite erfarenhet av det.

Det jag inte riktigt har förstått till hundra procent ännu är routes och controllers, men jag hoppas att det faller på plats i de kommande kursmomenten.

***

4.
Specifikt med tanke på denna kursen och speciellt detta kursmomentet så finner jag delen med "Templating" värdefull och där förklarar de bra vad templates är och hur de används. Jag förstår att det är bra att använda templates för att gör en snyggare och lättläst kod vilket kommer att förenkla mitt arbete och framtida sammarbeten.

 I artikeln nämns ett exempel där de använder en template med Twig, likt det jag gjorde i det här kursmomentet. Jag skulle vilja lära mig mer om vilka olika bibliotek och templates man kan använda.

 En annan intressant sak som artikeln nämner är hur PHP ser på Errors. Speciellt att det kan fortsätta exekveras och arbeta trots att det finns ett fel i koden.

 Istället för att koden slutar exekveras vid ett litet fel så får man en notifikation att det är något fel men koden har ändå försökt exekveras utan att krascha. Detta är intressant och något jag vill lära mig med om.

***

5.
Mitt TIL för detta kmom är hur man skapar webbplatser med hjälp av ramverket Symfony.

 Det kan kännas lite överväldigande att lära sig att arbeta och förstå ett nytt ramverk, men installationen gick väldigt smidigt och tack vare föreläsningsvideon och symfony videon så förstod jag tydligare vad jag höll på med och varför man gör på det här sättet. Tummen upp för lättförståeligt material!

***
